#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	ynh_clean_check_starting
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC
mpd_port=$YNH_APP_ARG_MPD_EXT

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..."

final_path=/opt/yunohost/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..."

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
ynh_script_progression --message="Finding an available port..."

# Find an available port
port=$(ynh_find_port --port=6680)
ynh_app_setting_set --app=$app --key=port --value=$port

if [ $mpd_port -eq 1 ]; then
	mpd_port=$(ynh_find_port --port=6600)
	ynh_app_setting_set --app=$app --key=mpd_port --value=$mpd_port
	ynh_exec_warn_less yunohost firewall allow --no-upnp TCP $mpd_port
	mpd_state="true"
else
	mpd_state="false"
fi

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=30

ynh_exec_warn_less ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..."

# Create a system user
ynh_system_user_create --username=$app --home_dir="$final_path" --use_shell --groups="audio"

#=================================================
# INSTALL MOPIDY IN PYTHON ENVIRONMENT
#=================================================
ynh_script_progression --message="Install in Python environment..." --weight=30

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
myynh_install
patch -u $final_path/env/lib/python$python_version/site-packages/mopidy/__main__.py -i ../sources/patches/__main__.patch --forward

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC SETUP
#=================================================
# BUILD MULTIMEDIA
#=================================================
ynh_script_progression --message="Building multimedia directory..."

media_dir="/home/yunohost.multimedia/share/Music"
ynh_multimedia_build_main_dir      # /home/yunohost.multimedia

#=================================================
# CREATE DATA DIRECTORY
#=================================================
ynh_script_progression --message="Creating a data directory..."

datadir=/home/yunohost.app/$app
ynh_app_setting_set --app=$app --key=datadir --value=$datadir

mkdir -p $datadir
mkdir -p "$datadir/data"          # /home/yunohost.app/mopidy/data
mkdir -p "$datadir/cache"         # /home/yunohost.app/mopidy/cache

chmod 750 "$datadir"
chmod -R o-rwx "$datadir"
chown -R $app:www-data "$datadir"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..."

ynh_add_config --template="../conf/app.conf" --destination="$final_path/$app.conf"

chmod 400 "$final_path/$app.conf"
chown $app:$app "$final_path/$app.conf"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..."

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# PROVIDE ADDITIONAL SHELL COMMAND 
#=================================================
ynh_script_progression --message="Provide additional shell command..."

cmd_file="/usr/local/bin/mopidyctl"
ynh_add_config --template="../sources/extra_files/mopidyctl" --destination="$cmd_file"

chmod +x "$cmd_file"

#=================================================
# PROVIDE EXAMPLES
#=================================================

media_dir="/home/yunohost.multimedia/share/Music"

# provide example m3u-playlist
mkdir -p "$datadir/data/m3u/"
cp -a ../sources/extra_files/radio_international.m3u "$datadir/data/m3u/radio_international.m3u"

#provide example podcasts
mkdir -p "$datadir/data/podcast"
cp -a ../sources/extra_files/bbc.opml "$datadir/data/podcast/bbc.opml"

#provide example local music file
if [ "$(ls -A "$media_dir" 2> /dev/null)" == "" ]; then   # copy example.mp3 to mediadir if empty (for test purpose) 
    cp -a ../sources/extra_files/Tryad_Beauty.mp3 "$media_dir"
fi

#=================================================
# SCAN LOCAL MEDIA DIRECTORY
#=================================================
ynh_script_progression --message="Scan local media directory..."

# "$cmd_file" local scan  2>&1

#=================================================
# GENERIC FINALIZATION
#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

if [ $mpd_port -ne 0 ]; then
	yunohost service add $app --description="Mopidy music server" --needs_exposed_ports=$mpd_port
else
	yunohost service add $app --description="Mopidy music server"
fi

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring permissions..."

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# Everyone can access the app.
	# The "main" permission is automatically created before the install script.
	ynh_permission_update --permission="main" --add="visitors"
fi

ynh_permission_url --permission="main" --add_url="$domain/mopidy/ws"
ynh_permission_url --permission="main" --add_url="$domain/musicbox_webclient"
ynh_permission_url --permission="main" --add_url="$domain/local"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
